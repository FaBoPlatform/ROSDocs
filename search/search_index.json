{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ROS Docs ROS Docs\u306b\u3064\u3044\u3066 ROS Docs\u306f\u3001ROS\u306e\u5b66\u7fd2\u7528\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u3059\u3002 \u4fee\u6b63\u4f9d\u983c\u7b49 Github\u306eRepo\u306b Issues \u3092\u3042\u3052\u308b\u3002 \u305d\u306e\u4ed6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 LoRa Docs Android Things Docs DonkeyCar Docs Denbun Docs Circuit Docs Swift Docs Keras Docs NRF Docs DeviceWebAPI Docs","title":"ROS Docs"},{"location":"#ros-docs","text":"","title":"ROS Docs"},{"location":"#ros-docs_1","text":"ROS Docs\u306f\u3001ROS\u306e\u5b66\u7fd2\u7528\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u3059\u3002","title":"ROS Docs\u306b\u3064\u3044\u3066"},{"location":"#_1","text":"Github\u306eRepo\u306b Issues \u3092\u3042\u3052\u308b\u3002","title":"\u4fee\u6b63\u4f9d\u983c\u7b49"},{"location":"#_2","text":"LoRa Docs Android Things Docs DonkeyCar Docs Denbun Docs Circuit Docs Swift Docs Keras Docs NRF Docs DeviceWebAPI Docs","title":"\u305d\u306e\u4ed6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"},{"location":"01.ROS/01.ros/","text":"Jetson Nano\u306bROS\u3092\u69cb\u7bc9 Jetson Nano\u7528\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 1 2 3 sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 sudo apt update ROS Desktop package\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 sudo apt install ros-melodic-desktop rosdep\u306e\u521d\u671f\u5316 1 2 sudo rosdep init rosdep update \u74b0\u5883\u7de8\u6570\u306b\u767b\u9332 1 2 echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc source ~/.bashrc Catkin Workspace\u306e\u4f5c\u6210 1 2 3 4 sudo apt-get install cmake python-catkin-pkg python-empy python-nose python-setuptools libgtest-dev python-rosinstall python-rosinstall-generator python-wstool build-essential git mkdir -p ~/catkin_ws/src cd ~/catkin_ws/ catkin_make \u74b0\u5883\u7de8\u6570\u306b\u767b\u9332 1 2 echo \"source ~/catkin_ws/devel/setup.bash\" >> ~/.bashrc source ~/.bashrc","title":"Jetson Nano\u306bROS\u3092\u69cb\u7bc9"},{"location":"01.ROS/01.ros/#jetson-nanoros","text":"Jetson Nano\u7528\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 1 2 3 sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 sudo apt update ROS Desktop package\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 sudo apt install ros-melodic-desktop rosdep\u306e\u521d\u671f\u5316 1 2 sudo rosdep init rosdep update \u74b0\u5883\u7de8\u6570\u306b\u767b\u9332 1 2 echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc source ~/.bashrc Catkin Workspace\u306e\u4f5c\u6210 1 2 3 4 sudo apt-get install cmake python-catkin-pkg python-empy python-nose python-setuptools libgtest-dev python-rosinstall python-rosinstall-generator python-wstool build-essential git mkdir -p ~/catkin_ws/src cd ~/catkin_ws/ catkin_make \u74b0\u5883\u7de8\u6570\u306b\u767b\u9332 1 2 echo \"source ~/catkin_ws/devel/setup.bash\" >> ~/.bashrc source ~/.bashrc","title":"Jetson Nano\u306bROS\u3092\u69cb\u7bc9"},{"location":"01.ROS/02.cartographer/","text":"Jetson Nano\u306bCartographer\u3092\u69cb\u7bc9 Cartographer\u95a2\u9023\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 $ apt-get install ros-melodic-cartographer ros-melodic-cartographer-ros ros-melodic-cartographer-ros-msgs ros-melodic-cartographer-rviz Cartographer\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u6301\u3063\u3066\u304f\u308b 1 2 $ cd ~/catkin_ws/src $ git clone https://github.com/ros-japan-users/cartographer_example","title":"Jetson Nano\u306bCartographer\u3092\u69cb\u7bc9"},{"location":"01.ROS/02.cartographer/#jetson-nanocartographer","text":"Cartographer\u95a2\u9023\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 $ apt-get install ros-melodic-cartographer ros-melodic-cartographer-ros ros-melodic-cartographer-ros-msgs ros-melodic-cartographer-rviz Cartographer\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u6301\u3063\u3066\u304f\u308b 1 2 $ cd ~/catkin_ws/src $ git clone https://github.com/ros-japan-users/cartographer_example","title":"Jetson Nano\u306bCartographer\u3092\u69cb\u7bc9"},{"location":"01.ROS/03.ydlidar/","text":"Jetson Nano\u306bYDLiDAR Build 1 2 3 $ cd ~/catkin_ws/src $ git clone https://github.com/EAIBOT/ydlidar.git $ cd ~/catkin_ws scan_msg.scan_time, scan_msg.time_increment\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u5408\u3063\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001YDLiDAR\u306eIssue https://github.com/EAIBOT/ydlidar/issues/14 \u306b\u3042\u304c\u3063\u3066\u3044\u308b\u4fee\u6b63\u3092\u5b9f\u65bd\u3059\u308b\u3002 /catkin_ws/src/ydlidar/src/ydlidar_node.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 ... while ( ros :: ok ()) { bool hardError ; LaserScan scan ; //\u539f\u59cb\u6fc0\u5149\u6570\u636e if ( laser . doProcessSimple ( scan , hardError )){ sensor_msgs :: LaserScan scan_msg ; ros :: Time start_scan_time ; start_scan_time . sec = scan . system_time_stamp / 1000000000ul ; start_scan_time . nsec = scan . system_time_stamp % 1000000000ul ; scan_msg . header . stamp = start_scan_time ; scan_msg . header . frame_id = frame_id ; scan_msg . angle_min = scan . config . min_angle ; scan_msg . angle_max = scan . config . max_angle ; scan_msg . angle_increment = scan . config . ang_increment ; scan_msg . scan_time = scan . config . scan_time / 1000000000.0 ; scan_msg . time_increment = scan . config . time_increment / 1000000000.0 ; scan_msg . range_min = scan . config . min_range ; scan_msg . range_max = scan . config . max_range ; scan_msg . ranges = scan . ranges ; scan_msg . intensities = scan . intensities ; scan_pub . publish ( scan_msg ); } rate . sleep (); ros :: spinOnce (); } ... Build 1 2 $ cd ~/catkin_ws $ catkin_make_isolated --install --use-ninja udev 1 2 3 $ cd ~/ros_catkin_ws/src/ydlidar/startup $ chmod 777 * $ sudo sh initenv.sh","title":"Jetson Nano\u306bYDLiDAR"},{"location":"01.ROS/03.ydlidar/#jetson-nanoydlidar","text":"","title":"Jetson Nano\u306bYDLiDAR"},{"location":"01.ROS/03.ydlidar/#build","text":"1 2 3 $ cd ~/catkin_ws/src $ git clone https://github.com/EAIBOT/ydlidar.git $ cd ~/catkin_ws scan_msg.scan_time, scan_msg.time_increment\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u5408\u3063\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001YDLiDAR\u306eIssue https://github.com/EAIBOT/ydlidar/issues/14 \u306b\u3042\u304c\u3063\u3066\u3044\u308b\u4fee\u6b63\u3092\u5b9f\u65bd\u3059\u308b\u3002 /catkin_ws/src/ydlidar/src/ydlidar_node.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 ... while ( ros :: ok ()) { bool hardError ; LaserScan scan ; //\u539f\u59cb\u6fc0\u5149\u6570\u636e if ( laser . doProcessSimple ( scan , hardError )){ sensor_msgs :: LaserScan scan_msg ; ros :: Time start_scan_time ; start_scan_time . sec = scan . system_time_stamp / 1000000000ul ; start_scan_time . nsec = scan . system_time_stamp % 1000000000ul ; scan_msg . header . stamp = start_scan_time ; scan_msg . header . frame_id = frame_id ; scan_msg . angle_min = scan . config . min_angle ; scan_msg . angle_max = scan . config . max_angle ; scan_msg . angle_increment = scan . config . ang_increment ; scan_msg . scan_time = scan . config . scan_time / 1000000000.0 ; scan_msg . time_increment = scan . config . time_increment / 1000000000.0 ; scan_msg . range_min = scan . config . min_range ; scan_msg . range_max = scan . config . max_range ; scan_msg . ranges = scan . ranges ; scan_msg . intensities = scan . intensities ; scan_pub . publish ( scan_msg ); } rate . sleep (); ros :: spinOnce (); } ... Build 1 2 $ cd ~/catkin_ws $ catkin_make_isolated --install --use-ninja","title":"Build"},{"location":"01.ROS/03.ydlidar/#udev","text":"1 2 3 $ cd ~/ros_catkin_ws/src/ydlidar/startup $ chmod 777 * $ sudo sh initenv.sh","title":"udev"},{"location":"01.ROS/04.ros/","text":"\u9023\u643a YDLiDAR (Jetson nano\u5074) ~/catkin_ws/src/ydlidar/launch/lidar.launch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <launch> <node name= \"ydlidar_node\" pkg= \"ydlidar\" type= \"ydlidar_node\" output= \"screen\" > <param name= \"port\" type= \"string\" value= \"/dev/ydlidar\" /> <param name= \"baudrate\" type= \"int\" value= \"128000\" /> <param name= \"frame_id\" type= \"string\" value= \"laser\" /> <param name= \"angle_fixed\" type= \"bool\" value= \"true\" /> <param name= \"low_exposure\" type= \"bool\" value= \"false\" /> <param name= \"heartbeat\" type= \"bool\" value= \"false\" /> <param name= \"resolution_fixed\" type= \"bool\" value= \"true\" /> <param name= \"angle_min\" type= \"double\" value= \"-180\" /> <param name= \"angle_max\" type= \"double\" value= \"180\" /> <param name= \"range_min\" type= \"double\" value= \"0.08\" /> <param name= \"range_max\" type= \"double\" value= \"16.0\" /> <param name= \"ignore_array\" type= \"string\" value= \"\" /> <param name= \"samp_rate\" type= \"int\" value= \"9\" /> <param name= \"frequency\" type= \"double\" value= \"7\" /> </node> <node pkg= \"tf\" type= \"static_transform_publisher\" name= \"base_to_laser\" args= \"0.0 0.0 0.18 0 0.0 0.0 base_link laser 100\" /> <node pkg= \"tf\" type= \"static_transform_publisher\" name= \"base_link_to_laser4\" args= \"0.2245 0.0 1.5 0.0 0.0 0.0 /base_link /base_laser 40\" /> </launch> Cartographer (Jetson nano\u5074) demo_revo_lds.launch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <launch> <param name= \"/use_sim_time\" value= \"true\" /> <node name= \"cartographer_node\" pkg= \"cartographer_ros\" type= \"cartographer_node\" args= \" -configuration_directory $(find cartographer_ros)/configuration_files -configuration_basename revo_lds.lua\" output= \"screen\" > <remap from= \"scan\" to= \"scan\" /> </node> <node name= \"cartographer_occupancy_grid_node\" pkg= \"cartographer_ros\" type= \"cartographer_occupancy_grid_node\" args= \"-resolution 0.05\" /> </launch> revo_lds.lua 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 include \"map_builder.lua\" include \"trajectory_builder.lua\" options = { map_builder = MAP_BUILDER, trajectory_builder = TRAJECTORY_BUILDER, map_frame = \"map\", tracking_frame = \"laser\", published_frame = \"laser\", odom_frame = \"odom\", provide_odom_frame = true, use_odometry = false, use_nav_sat = false, use_landmarks = false, publish_frame_projected_to_2d = false, num_laser_scans = 1, num_multi_echo_laser_scans = 0, num_subdivisions_per_laser_scan = 1, num_point_clouds = 0, lookup_transform_timeout_sec = 0.2, submap_publish_period_sec = 0.3, pose_publish_period_sec = 5e-3, trajectory_publish_period_sec = 30e-3, rangefinder_sampling_ratio = 1., odometry_sampling_ratio = 1., fixed_frame_pose_sampling_ratio = 1., imu_sampling_ratio = 1., landmarks_sampling_ratio = 1., } MAP_BUILDER.use_trajectory_builder_2d = true TRAJECTORY_BUILDER_2D.submaps.num_range_data = 35 TRAJECTORY_BUILDER_2D.min_range = 0.08 TRAJECTORY_BUILDER_2D.max_range = 16. TRAJECTORY_BUILDER_2D.missing_data_ray_length = 1. TRAJECTORY_BUILDER_2D.use_imu_data = false TRAJECTORY_BUILDER_2D.use_online_correlative_scan_matching = true TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.linear_search_window = 0.1 TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.translation_delta_cost_weight = 10. TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.rotation_delta_cost_weight = 1e-1 POSE_GRAPH.optimization_problem.huber_scale = 1e2 POSE_GRAPH.optimize_every_n_nodes = 35 POSE_GRAPH.constraint_builder.min_score = 0.65 return options Cartographer (PC\u5074) 1 2 3 4 $ cd ~/catkin_wsgc $ source install_isolated/setup.bash $ export ROS_MASTER_URI = http://nano\u306eip\u30a2\u30c9\u30ec\u30b9:11311/ $ roslaunch cartographer_ros demo_revo_lds.launch https://www.youtube.com/watch?v=4ipDP9dIYYs","title":"\u9023\u643a"},{"location":"01.ROS/04.ros/#_1","text":"","title":"\u9023\u643a"},{"location":"01.ROS/04.ros/#ydlidar-jetson-nano","text":"~/catkin_ws/src/ydlidar/launch/lidar.launch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <launch> <node name= \"ydlidar_node\" pkg= \"ydlidar\" type= \"ydlidar_node\" output= \"screen\" > <param name= \"port\" type= \"string\" value= \"/dev/ydlidar\" /> <param name= \"baudrate\" type= \"int\" value= \"128000\" /> <param name= \"frame_id\" type= \"string\" value= \"laser\" /> <param name= \"angle_fixed\" type= \"bool\" value= \"true\" /> <param name= \"low_exposure\" type= \"bool\" value= \"false\" /> <param name= \"heartbeat\" type= \"bool\" value= \"false\" /> <param name= \"resolution_fixed\" type= \"bool\" value= \"true\" /> <param name= \"angle_min\" type= \"double\" value= \"-180\" /> <param name= \"angle_max\" type= \"double\" value= \"180\" /> <param name= \"range_min\" type= \"double\" value= \"0.08\" /> <param name= \"range_max\" type= \"double\" value= \"16.0\" /> <param name= \"ignore_array\" type= \"string\" value= \"\" /> <param name= \"samp_rate\" type= \"int\" value= \"9\" /> <param name= \"frequency\" type= \"double\" value= \"7\" /> </node> <node pkg= \"tf\" type= \"static_transform_publisher\" name= \"base_to_laser\" args= \"0.0 0.0 0.18 0 0.0 0.0 base_link laser 100\" /> <node pkg= \"tf\" type= \"static_transform_publisher\" name= \"base_link_to_laser4\" args= \"0.2245 0.0 1.5 0.0 0.0 0.0 /base_link /base_laser 40\" /> </launch>","title":"YDLiDAR (Jetson nano\u5074)"},{"location":"01.ROS/04.ros/#cartographer-jetson-nano","text":"demo_revo_lds.launch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <launch> <param name= \"/use_sim_time\" value= \"true\" /> <node name= \"cartographer_node\" pkg= \"cartographer_ros\" type= \"cartographer_node\" args= \" -configuration_directory $(find cartographer_ros)/configuration_files -configuration_basename revo_lds.lua\" output= \"screen\" > <remap from= \"scan\" to= \"scan\" /> </node> <node name= \"cartographer_occupancy_grid_node\" pkg= \"cartographer_ros\" type= \"cartographer_occupancy_grid_node\" args= \"-resolution 0.05\" /> </launch> revo_lds.lua 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 include \"map_builder.lua\" include \"trajectory_builder.lua\" options = { map_builder = MAP_BUILDER, trajectory_builder = TRAJECTORY_BUILDER, map_frame = \"map\", tracking_frame = \"laser\", published_frame = \"laser\", odom_frame = \"odom\", provide_odom_frame = true, use_odometry = false, use_nav_sat = false, use_landmarks = false, publish_frame_projected_to_2d = false, num_laser_scans = 1, num_multi_echo_laser_scans = 0, num_subdivisions_per_laser_scan = 1, num_point_clouds = 0, lookup_transform_timeout_sec = 0.2, submap_publish_period_sec = 0.3, pose_publish_period_sec = 5e-3, trajectory_publish_period_sec = 30e-3, rangefinder_sampling_ratio = 1., odometry_sampling_ratio = 1., fixed_frame_pose_sampling_ratio = 1., imu_sampling_ratio = 1., landmarks_sampling_ratio = 1., } MAP_BUILDER.use_trajectory_builder_2d = true TRAJECTORY_BUILDER_2D.submaps.num_range_data = 35 TRAJECTORY_BUILDER_2D.min_range = 0.08 TRAJECTORY_BUILDER_2D.max_range = 16. TRAJECTORY_BUILDER_2D.missing_data_ray_length = 1. TRAJECTORY_BUILDER_2D.use_imu_data = false TRAJECTORY_BUILDER_2D.use_online_correlative_scan_matching = true TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.linear_search_window = 0.1 TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.translation_delta_cost_weight = 10. TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.rotation_delta_cost_weight = 1e-1 POSE_GRAPH.optimization_problem.huber_scale = 1e2 POSE_GRAPH.optimize_every_n_nodes = 35 POSE_GRAPH.constraint_builder.min_score = 0.65 return options","title":"Cartographer (Jetson nano\u5074)"},{"location":"01.ROS/04.ros/#cartographer-pc","text":"1 2 3 4 $ cd ~/catkin_wsgc $ source install_isolated/setup.bash $ export ROS_MASTER_URI = http://nano\u306eip\u30a2\u30c9\u30ec\u30b9:11311/ $ roslaunch cartographer_ros demo_revo_lds.launch https://www.youtube.com/watch?v=4ipDP9dIYYs","title":"Cartographer (PC\u5074)"},{"location":"03.OSX/01.xwindow/","text":"X Windows XQuarts\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb https://www.xquartz.org/ \u8d77\u52d5\u3059\u308b 1 $ xhost Docker\u3092\u53d6\u5f97 local\u3092\u8ffd\u52a0 1 $ xhost +127.0.0.1 DISPLAY\u306e\u74b0\u5883\u7de8\u6570\u3092\u3064\u3051\u3066Docker\u8aad\u307f\u8fbc\u307f 1 2 $ docker pull ubuntu:18.04 $ docker run -env DISPLAY = docker.for.mac.localhost:0 --env = QT_X11_NO_MITSHM = 1 -it ubuntu:18.04","title":"X Windows"},{"location":"03.OSX/01.xwindow/#x-windows","text":"","title":"X Windows"},{"location":"03.OSX/01.xwindow/#xquarts","text":"https://www.xquartz.org/ \u8d77\u52d5\u3059\u308b 1 $ xhost","title":"XQuarts\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"03.OSX/01.xwindow/#docker","text":"local\u3092\u8ffd\u52a0 1 $ xhost +127.0.0.1 DISPLAY\u306e\u74b0\u5883\u7de8\u6570\u3092\u3064\u3051\u3066Docker\u8aad\u307f\u8fbc\u307f 1 2 $ docker pull ubuntu:18.04 $ docker run -env DISPLAY = docker.for.mac.localhost:0 --env = QT_X11_NO_MITSHM = 1 -it ubuntu:18.04","title":"Docker\u3092\u53d6\u5f97"},{"location":"04.etc/03.ubuntu16/","text":"Ubuntu 16.04\u306bROS\u3092\u69cb\u7bc9 Docker\u306e\u8d77\u52d5 \u8a2d\u5b9a 1 2 3 4 5 FROM ros:melodic RUN apt-get update \\ && apt-get install -y ros-melodic-desktop \\ && rm -rf /var/lib/apt/lists/ \\ 1 docker build -t ros-cartographer . 1 2 3 4 open -a Xqurtz ip=$(ifconfig en0 | grep inet | awk '$1==\"inet\" {print $2}') echo $ip xhost + $ip 1 docker run -it -e DISPLAY=$ip:0 --name ros-test ros-cartographer 1 docker exec -it ros-cartographer bin/bash Rosdep\u306e\u521d\u671f\u5316 1 2 $ rosdep init $ rosdep update Catkin Workspace\u306e\u4f5c\u6210 1 2 3 4 5 $ apt-get update $ apt-get install cmake python-catkin-pkg python-empy python-nose python-setuptools libgtest-dev python-rosinstall python-rosinstall-generator python-wstool build-essential git $ mkdir -p ~/catkin_ws/src $ cd ~/catkin_ws/ $ catkin_make \u74b0\u5883\u7de8\u6570\u306b\u767b\u9332 1 2 $ echo \"source ~/catkin_ws/devel/setup.bash\" >> ~/.bashrc $ source ~/.bashrc Cartographer\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 $ apt install ros-melodic-cartographer-ros 1 2 3 4 5 6 7 8 9 $ apt-get install ninja-build libceres-dev libprotobuf-dev protobuf-compiler libprotoc-dev $ cd ~/catkin_ws/src $ git clone https://github.com/googlecartographer/cartographer.git $ git clone https://github.com/googlecartographer/cartographer_ros.git $ cd ~/catkin_ws $ src/cartographer/scripts/install_proto3.sh $ rm -rf protobuf/ $ rosdep install --from-paths src --ignore-src -r -y --os = ubuntu:xenial $ catkin_make_isolated --install --use-ninja 1 2 $ cd ~/catkin_ws/src/cartographer_ros/cartographer_ros/launch/ $ vim backpack_2d.launch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <!-- Copyright 2016 The Cartographer Authors Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> <launch> <param name= \"robot_description\" textfile= \"$(find cartographer_ros)/urdf/backpack_2d.urdf\" /> <node name= \"rviz\" pkg= \"rviz\" type= \"rviz\" required= \"true\" args= \"-d $(find cartographer_ros)/configuration_files/demo_2d.rviz\" /> </launch> 1 2 3 $ cd ~/catkin_ws $ catkin_make_isolated --install --use-ninja $ source install_isolated/setup.bash \u30a8\u30e9\u30fc\u304c\u3067\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 QStandardPaths : XDG_RUNTIME_DIR not set , defaulting to '/tmp/runtime-root' libGL error : No matching fbConfigs or visuals found libGL error : failed to load driver : swrast libGL error : No matching fbConfigs or visuals found libGL error : failed to load driver : swrast libGL error : No matching fbConfigs or visuals found libGL error : failed to load driver : swrast rviz : /build/ogre-1.9-B6QkmW/ogre-1.9-1.9.0+dfsg1/RenderSystems/GL/src/ OgreGLSupport . cpp : 56 : virtual void Ogre :: GLSupport :: initialiseExtensions (): Assertion ` pcVer && \"Problems getting GL version string using glGetString\" ' failed . ================================================================================ REQUIRED process [ rviz - 2 ] has died ! process has died [ pid 10453 , exit code - 6 , cmd /opt/ros/melodic/lib/rviz/rviz -d /root/catkin_ws/install_isolated/share/cartographer_ros/configuration_files/demo_2d.rviz __name:=rviz __log:=/root/.ros/log/8bb415ce-5c0d-11e9-9055-0242ac110004/ rviz - 2 . log ]. log file : /root/.ros/log/8bb415ce-5c0d-11e9-9055-0242ac110004/ rviz - 2 *. log Initiating shutdown ! ================================================================================ [ rviz - 2 ] killing on exit [ rosout - 1 ] killing on exit [ master ] killing on exit shutting down processing monitor ... ... shutting down processing monitor complete done","title":"Ubuntu 16.04\u306bROS\u3092\u69cb\u7bc9"},{"location":"04.etc/03.ubuntu16/#ubuntu-1604ros","text":"","title":"Ubuntu 16.04\u306bROS\u3092\u69cb\u7bc9"},{"location":"04.etc/03.ubuntu16/#docker","text":"","title":"Docker\u306e\u8d77\u52d5"},{"location":"04.etc/03.ubuntu16/#_1","text":"1 2 3 4 5 FROM ros:melodic RUN apt-get update \\ && apt-get install -y ros-melodic-desktop \\ && rm -rf /var/lib/apt/lists/ \\ 1 docker build -t ros-cartographer . 1 2 3 4 open -a Xqurtz ip=$(ifconfig en0 | grep inet | awk '$1==\"inet\" {print $2}') echo $ip xhost + $ip 1 docker run -it -e DISPLAY=$ip:0 --name ros-test ros-cartographer 1 docker exec -it ros-cartographer bin/bash Rosdep\u306e\u521d\u671f\u5316 1 2 $ rosdep init $ rosdep update Catkin Workspace\u306e\u4f5c\u6210 1 2 3 4 5 $ apt-get update $ apt-get install cmake python-catkin-pkg python-empy python-nose python-setuptools libgtest-dev python-rosinstall python-rosinstall-generator python-wstool build-essential git $ mkdir -p ~/catkin_ws/src $ cd ~/catkin_ws/ $ catkin_make \u74b0\u5883\u7de8\u6570\u306b\u767b\u9332 1 2 $ echo \"source ~/catkin_ws/devel/setup.bash\" >> ~/.bashrc $ source ~/.bashrc","title":"\u8a2d\u5b9a"},{"location":"04.etc/03.ubuntu16/#cartographer","text":"1 $ apt install ros-melodic-cartographer-ros 1 2 3 4 5 6 7 8 9 $ apt-get install ninja-build libceres-dev libprotobuf-dev protobuf-compiler libprotoc-dev $ cd ~/catkin_ws/src $ git clone https://github.com/googlecartographer/cartographer.git $ git clone https://github.com/googlecartographer/cartographer_ros.git $ cd ~/catkin_ws $ src/cartographer/scripts/install_proto3.sh $ rm -rf protobuf/ $ rosdep install --from-paths src --ignore-src -r -y --os = ubuntu:xenial $ catkin_make_isolated --install --use-ninja 1 2 $ cd ~/catkin_ws/src/cartographer_ros/cartographer_ros/launch/ $ vim backpack_2d.launch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <!-- Copyright 2016 The Cartographer Authors Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> <launch> <param name= \"robot_description\" textfile= \"$(find cartographer_ros)/urdf/backpack_2d.urdf\" /> <node name= \"rviz\" pkg= \"rviz\" type= \"rviz\" required= \"true\" args= \"-d $(find cartographer_ros)/configuration_files/demo_2d.rviz\" /> </launch> 1 2 3 $ cd ~/catkin_ws $ catkin_make_isolated --install --use-ninja $ source install_isolated/setup.bash \u30a8\u30e9\u30fc\u304c\u3067\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 QStandardPaths : XDG_RUNTIME_DIR not set , defaulting to '/tmp/runtime-root' libGL error : No matching fbConfigs or visuals found libGL error : failed to load driver : swrast libGL error : No matching fbConfigs or visuals found libGL error : failed to load driver : swrast libGL error : No matching fbConfigs or visuals found libGL error : failed to load driver : swrast rviz : /build/ogre-1.9-B6QkmW/ogre-1.9-1.9.0+dfsg1/RenderSystems/GL/src/ OgreGLSupport . cpp : 56 : virtual void Ogre :: GLSupport :: initialiseExtensions (): Assertion ` pcVer && \"Problems getting GL version string using glGetString\" ' failed . ================================================================================ REQUIRED process [ rviz - 2 ] has died ! process has died [ pid 10453 , exit code - 6 , cmd /opt/ros/melodic/lib/rviz/rviz -d /root/catkin_ws/install_isolated/share/cartographer_ros/configuration_files/demo_2d.rviz __name:=rviz __log:=/root/.ros/log/8bb415ce-5c0d-11e9-9055-0242ac110004/ rviz - 2 . log ]. log file : /root/.ros/log/8bb415ce-5c0d-11e9-9055-0242ac110004/ rviz - 2 *. log Initiating shutdown ! ================================================================================ [ rviz - 2 ] killing on exit [ rosout - 1 ] killing on exit [ master ] killing on exit shutting down processing monitor ... ... shutting down processing monitor complete done","title":"Cartographer\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"04.etc/03.ydlidar/","text":"ydlidar Git clone 1 2 3 4 $ cd ~/catkin_ws/ $ git clone https://github.com/EAIBOT/ydlidar.git $ cd ydlidar $ catkin_make Install 1 2 3 $ roscd ydlidar/startup $ sudo chmod 777 ./* $ sudo sh initenv.sh \u8d77\u52d5 \u8d77\u52d5 1 roslaunch ydlidar lidar_view.launch","title":"ydlidar"},{"location":"04.etc/03.ydlidar/#ydlidar","text":"Git clone 1 2 3 4 $ cd ~/catkin_ws/ $ git clone https://github.com/EAIBOT/ydlidar.git $ cd ydlidar $ catkin_make Install 1 2 3 $ roscd ydlidar/startup $ sudo chmod 777 ./* $ sudo sh initenv.sh","title":"ydlidar"},{"location":"04.etc/03.ydlidar/#_1","text":"\u8d77\u52d5 1 roslaunch ydlidar lidar_view.launch","title":"\u8d77\u52d5"},{"location":"04.etc/04.cartographer/","text":"Cartographer \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb sudo apt install ros-melodic-cartographer-ros \u81ea\u5206\u3067Build Build\u306b\u306f4-5\u6642\u9593\u304b\u304b\u308b wtool, ninja\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 2 sudo apt-get update sudo apt-get install -y python-wstool python-rosdep ninja-build catkin_ws\u306b\u74b0\u5883\u69cb\u7bc9 1 2 3 4 5 mkdir catkin_ws cd catkin_ws wstool init src wstool merge -t src https://raw.githubusercontent.com/googlecartographer/cartographer_ros/master/cartographer_ros.rosinstall wstool update -t src proto3\u3068\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 2 3 4 src/cartographer/scripts/install_proto3.sh sudo rosdep init rosdep update rosdep install --from-paths src --ignore-src --rosdistro= ${ ROS_DISTRO } -y Catographer\u306eBuild\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 catkin_make_isolated --install --use-ninja \u5b9f\u884c 1 2 3 $ source install_isolated/setup.bash $ wget -P ~/Downloads https://storage.googleapis.com/cartographer-public-data/bags/backpack_2d/cartographer_paper_deutsches_museum.bag $ roslaunch cartographer_ros demo_backpack_2d.launch bag_filename: = ${ HOME } /Downloads/cartographer_paper_deutsches_museum.bag","title":"Cartographer"},{"location":"04.etc/04.cartographer/#cartographer","text":"","title":"Cartographer"},{"location":"04.etc/04.cartographer/#_1","text":"sudo apt install ros-melodic-cartographer-ros","title":"\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"04.etc/04.cartographer/#build","text":"Build\u306b\u306f4-5\u6642\u9593\u304b\u304b\u308b wtool, ninja\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 2 sudo apt-get update sudo apt-get install -y python-wstool python-rosdep ninja-build catkin_ws\u306b\u74b0\u5883\u69cb\u7bc9 1 2 3 4 5 mkdir catkin_ws cd catkin_ws wstool init src wstool merge -t src https://raw.githubusercontent.com/googlecartographer/cartographer_ros/master/cartographer_ros.rosinstall wstool update -t src proto3\u3068\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 2 3 4 src/cartographer/scripts/install_proto3.sh sudo rosdep init rosdep update rosdep install --from-paths src --ignore-src --rosdistro= ${ ROS_DISTRO } -y Catographer\u306eBuild\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 catkin_make_isolated --install --use-ninja","title":"\u81ea\u5206\u3067Build"},{"location":"04.etc/04.cartographer/#_2","text":"1 2 3 $ source install_isolated/setup.bash $ wget -P ~/Downloads https://storage.googleapis.com/cartographer-public-data/bags/backpack_2d/cartographer_paper_deutsches_museum.bag $ roslaunch cartographer_ros demo_backpack_2d.launch bag_filename: = ${ HOME } /Downloads/cartographer_paper_deutsches_museum.bag","title":"\u5b9f\u884c"},{"location":"04.etc/04.prilidar/","text":"prilidar https://github.com/robopeak/rplidar_ros","title":"prilidar"},{"location":"04.etc/04.prilidar/#prilidar","text":"https://github.com/robopeak/rplidar_ros","title":"prilidar"},{"location":"04.etc/05.ce30d/","text":"CE30-D Benewake CE30-D https://github.com/iamkevinzhao/ce30_driver_ros","title":"CE30-D"},{"location":"04.etc/05.ce30d/#ce30-d","text":"Benewake CE30-D https://github.com/iamkevinzhao/ce30_driver_ros","title":"CE30-D"},{"location":"04.etc/06.realsense/","text":"Realsense https://github.com/intel-ros/realsense","title":"Realsense"},{"location":"04.etc/06.realsense/#realsense","text":"https://github.com/intel-ros/realsense","title":"Realsense"},{"location":"04.etc/07.cartographer/","text":"Cartographer 2\u7a2e\u985e\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5 Google Cartographer\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u6b21\u306e2\u7a2e\u985e\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 $ sudo apt install ros-melodic-cartographer-ros Build\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb Build\u306b\u306f4-5\u6642\u9593\u304b\u304b\u308b wtool, ninja\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 2 $ sudo apt-get update $ sudo apt-get install -y python-wstool python-rosdep ninja-build catkin_ws\u306b\u74b0\u5883\u69cb\u7bc9 1 2 3 4 5 $ mkdir ~/catkin_ws $ cd ~/catkin_ws $ wstool init src $ wstool merge -t src https://raw.githubusercontent.com/googlecartographer/cartographer_ros/master/cartographer_ros.rosinstall $ wstool update -t src proto3\u3068\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 2 3 4 src/cartographer/scripts/install_proto3.sh sudo rosdep init rosdep update rosdep install --from-paths src --ignore-src --rosdistro= ${ ROS_DISTRO } -y Catographer\u306eBuild\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 catkin_make_isolated --install --use-ninja","title":"Cartographer"},{"location":"04.etc/07.cartographer/#cartographer","text":"","title":"Cartographer"},{"location":"04.etc/07.cartographer/#2","text":"Google Cartographer\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u6b21\u306e2\u7a2e\u985e\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002","title":"2\u7a2e\u985e\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5"},{"location":"04.etc/07.cartographer/#_1","text":"1 $ sudo apt install ros-melodic-cartographer-ros","title":"\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"04.etc/07.cartographer/#build","text":"Build\u306b\u306f4-5\u6642\u9593\u304b\u304b\u308b wtool, ninja\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 2 $ sudo apt-get update $ sudo apt-get install -y python-wstool python-rosdep ninja-build catkin_ws\u306b\u74b0\u5883\u69cb\u7bc9 1 2 3 4 5 $ mkdir ~/catkin_ws $ cd ~/catkin_ws $ wstool init src $ wstool merge -t src https://raw.githubusercontent.com/googlecartographer/cartographer_ros/master/cartographer_ros.rosinstall $ wstool update -t src proto3\u3068\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 2 3 4 src/cartographer/scripts/install_proto3.sh sudo rosdep init rosdep update rosdep install --from-paths src --ignore-src --rosdistro= ${ ROS_DISTRO } -y Catographer\u306eBuild\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 catkin_make_isolated --install --use-ninja","title":"Build\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"}]}